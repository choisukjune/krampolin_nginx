---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fontend
  name: fontend
spec:
  replicas: 3
  minReadySeconds: 0
  selector:
    matchLabels:
      app: fontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fontend
    spec:
      securityContext:
        supplementalGroups:
        - 100
        fsGroup: 100
      containers:
        - image: nginx
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          name: fontend
          volumeMounts:
            - mountPath: /tmp/storage
              name: fontend
      volumes:
        - name: fontend
          persistentVolumeClaim:
            claimName: test-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: fontend
  labels:
    app: fontend
spec:
  type: LoadBalancer
  selector:
    app: fontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  labels:
    app.kubernetes.io/managed-by: kargocd
  name: fontend
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: fontend
              servicePort: 80
            # 여러분의 app path 를 넣어주세요.
            path: /k065053a4cfdaa(/|$)(.*)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fontend
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---